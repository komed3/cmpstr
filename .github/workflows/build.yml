# --------------------------------------------------------------------------------
# 
# Workflow: Lint, Build & Pack
# 
# This GitHub Actions workflow performs automated type-checking, linting, and
# building for the CmpStr project. It is triggered on every push and pull request
# targeting the main branch.
# 
# The workflow consists of two jobs:
# 
# 1. Lint (TypeScript Linting):
#    - Installs dependencies
#    - Runs TypeScript-based linting and type-checking via `npm run lint`
# 
# 2. Test (Run Tests):
#    - Runs after the Lint job completes successfully
#    - Installs dependencies
#    - Executes tests using `npm test`
# 
# 3. Build (Build & Package):
#    - Runs after the Lint job completes successfully
#    - Installs dependencies
#    - Builds the project using `npm run build`
#    - Uploads the resulting `dist/` directory as an artifact
# 
# 4. Pack (Ready for Release):
#    - Runs after the Build job completes successfully
#    - Downloads the `dist/` artifact
#    - Packs the project into an npm tarball using `npm pack`
#    - Extracts the tarball to validate critical files
#    - Uploads the tarball as an artifact for further use
# 
# --------------------------------------------------------------------------------

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: TypeScript Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Type Checking with `tsc`
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [ lint, test ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Upload `dist/` as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cmpstr-dist
          path: dist/

  pack:
    name: Ready for Release?
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Download `dist/` Artifact
        uses: actions/download-artifact@v4
        with:
          name: cmpstr-dist

      - name: Pack npm Tarball
        run: npm pack

      - name: Extract Tarball for Validation
        run: |
          FILE=$(ls cmpstr-*.tgz)
          mkdir validation
          tar -xzf "$FILE" -C validation

      - name: Validate Critical Files
        run: |
          cd validation/package
          test -f dist/esm/index.js || (echo "Missing dist/esm/index.js" && exit 1)
          test -f dist/cjs/index.js || (echo "Missing dist/cjs/index.js" && exit 1)
          test -f dist/types/index.d.ts || (echo "Missing dist/types/index.d.ts" && exit 1)
          test -f dist/CmpStr.esm.js || (echo "Missing dist/CmpStr.esm.js" && exit 1)
          test -f dist/CmpStr.esm.min.js || (echo "Missing dist/CmpStr.esm.min.js" && exit 1)
          test -f dist/CmpStr.umd.js || (echo "Missing dist/CmpStr.umd.js" && exit 1)
          test -f dist/CmpStr.umd.min.js || (echo "Missing dist/CmpStr.umd.min.js" && exit 1)
          test -f README.md || (echo "Missing README.md" && exit 1)
          test -f LICENSE || (echo "Missing LICENSE" && exit 1)
          test -f package.json || (echo "Missing package.json" && exit 1)

      - name: Upload Tarball as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cmpstr-tgz
          path: cmpstr-*.tgz
          compression-level: 0